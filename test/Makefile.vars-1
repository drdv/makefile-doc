# ======================================================================================
# WARNING
# ======================================================================================
# Using inline comments for variables is not a good idea because the variable value
# would contain the extra space(s) between the value and the comment. For example,
# consider the following Makefile:
#
# DIR = important ## do not delete
# clean: ## remove generated stuff
#     rm -rf $(DIR).extra-info-dir
#
# If we run make clean, the command would expand to rm -rf $(DIR) .extra-info-dir
# instead of what we want: rm -rf $(DIR).extra-info-dir. Note that, normally, editors
# delete training space on save.
#
# The formatting of comments in this file is only for testing purposes.
# ======================================================================================

# all these should be aligned well in the docs
   VAR1_1    =1## First variable (with value)
   VAR1_0    =## First variable (without value)
 VAR2_1:=   1    ## Second variable (with value)
 VAR2_0:=        ## Second variable (without value)
VAR3_1 :=   1 ##     Third variable (with value)
VAR3_0 :=     ##     Third variable (without value)

## Top comment with value (to expand)
VAR4 = $(VAR1_1)

VAR5 = $(VAR1_1) ## Inline comment with value (to expand)

##@
##@ ----- Will be associated with the next anchor (which happens to be a variable) -----
##@

##! Variable with top docs
## line 2
VAR6 := 1 ## this will not be shown

# the leading space tests trimming of spaces in variable names
  VAR6 :=1 ##% Overwrites previous docs for this variable (change to deprecated)

#VAR7:=1 ##% This shouldn't appear

#commented-out-target: ## with some docs (but this should not appear)

##@
##@ ----- This section in anchored on a target -----
##@

some-target: ##% some target (that will comsume the above section)

## A one letter variable
x =

y = ## A one letter variable inline docs
